{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","src/app/ProgressBar.js","src/app/GameOver.js","src/app/Questions.js","src/app/HallOfFameAndMode.js","src/app/MainMenu.js","src/app/App.js","src/index.js"],"names":["timeLeft","ProgressBar","document","querySelector","style","display","timePassed","formatTime","time","Math","floor","innerHTML","animationBar","getElementsByClassName","animationBarTimer","animation","timerInterval","setInterval","clearInterval","startTimer","endGameScore","getElementById","endGameSummary","EndGame","Answers","score","computerScore","questionsShown","innerText","endGameImage","endGameCorrect","endGameYourAnswer","endGameComputerAnswer","button","EndTable","category","i","length","newDiv","createElement","id","appendChild","newDivImg","img","src","numberOfQuestion","newDivEndCorrect","answer","newDivEndYourAnswer","user","newDivEndComputerAnswer","computer","onclick","p","element","removeChild","childNodes","AnswersRaport","Questions","APIurl","setCategory","quiz","loader","questionEnd","questionImage","questionContent","questionWrapper","picture","options","optionWrapper","questionError","questionHeader","endGame","computerAnswer","backgroundColor","computerAnswers","good","bad","QuestionsPeople","fetchData","selectedArray","rightOption","iterations","questionsEnd","responseOk","responseStatus","StarWarsDataCount","StarWarsDataLength","getData","showQuestion","select","cleanAnswers","AnswerRaport","removeEventListener","queston1Listener","queston2Listener","queston3Listener","queston4Listener","computerChoise","computerPoint","computerPlay","push","classList","add","waitForData","remove","addEventListener","selected","selectQuestion","backgroundImage","indexOption","randomOption","ceil","getAllData","timeToEnd","localStorage","setItem","reset","getDataLocaly","transferData","require","Promise","resolve","setTimeout","url","fetchedData","waitForFetchEnd","controller","AbortController","signal","abort","fetch","method","then","response","ok","data","json","status","results","catch","alert","count","nextUrl","m","useLocal","newAPIurl","input","output","prefix1","prefix2","transferArea1","transferArea2","questions","dubbled","selectedQuestion","selectedChoises","optionsSelected","max","randomQuestion","random","number","randomChoise1","randomChoise2","randomChoise3","obj","rest","randomGood","index","indexOf","splice","module","exports","textToView","listItems","querySelectorAll","handleRulesButtonClick","e","target","textContent","forEach","item","contains","updateText","modeTitle","modeContent","rulesRankingButton","headImage","ranking","JSON","parse","getItem","Src","title","Rules","filter","map","person","name","max_score","scorePercents","toFixed","join","handleAllRankingButton","modal","span","rankingArray","modalRankingView","window","username","saveHighScore","preventDefault","value","lastScore","setRankingToLocalStorage","fileName","highScores","matched","findIndex","sort","a","b","endSection","rulesSection","stringify","handleModeUpdate","acceptingMode","toLowerCase","App","start","rules","swApiBaseUrl","ONE_SECOND_MILLIS","SW_API_BASE_URL","QUIZ_MAX_TIME","onload","quizMaxTime"],"mappings":";;AA4uBA,IAAA,EAruBA,EAAA,SAAA,GACA,aAEA,IAEA,EAFA,EAAA,OAAA,UACA,EAAA,EAAA,eAEA,EAAA,mBAAA,OAAA,OAAA,GACA,EAAA,EAAA,UAAA,aACA,EAAA,EAAA,eAAA,kBACA,EAAA,EAAA,aAAA,gBAEA,SAAA,EAAA,EAAA,EAAA,GAOA,OANA,OAAA,eAAA,EAAA,EAAA,CACA,MAAA,EACA,YAAA,EACA,cAAA,EACA,UAAA,IAEA,EAAA,GAEA,IAEA,EAAA,GAAA,IACA,MAAA,GACA,EAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,GAAA,GAIA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,EAAA,EACA,EAAA,OAAA,OAAA,EAAA,WACA,EAAA,IAAA,EAAA,GAAA,IAMA,OAFA,EAAA,QAsMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAEA,OAAA,SAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,IAAA,MAAA,gCAGA,GAAA,IAAA,EAAA,CACA,GAAA,UAAA,EACA,MAAA,EAKA,OAAA,IAMA,IAHA,EAAA,OAAA,EACA,EAAA,IAAA,IAEA,CACA,IAAA,EAAA,EAAA,SACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,CACA,GAAA,IAAA,EAAA,SACA,OAAA,GAIA,GAAA,SAAA,EAAA,OAGA,EAAA,KAAA,EAAA,MAAA,EAAA,SAEA,GAAA,UAAA,EAAA,OAAA,CACA,GAAA,IAAA,EAEA,MADA,EAAA,EACA,EAAA,IAGA,EAAA,kBAAA,EAAA,SAEA,WAAA,EAAA,QACA,EAAA,OAAA,SAAA,EAAA,KAGA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,WAAA,EAAA,KAAA,CAOA,GAJA,EAAA,EAAA,KACA,EACA,EAEA,EAAA,MAAA,EACA,SAGA,MAAA,CACA,MAAA,EAAA,IACA,KAAA,EAAA,MAGA,UAAA,EAAA,OACA,EAAA,EAGA,EAAA,OAAA,QACA,EAAA,IAAA,EAAA,OA9QA,CAAA,EAAA,EAAA,GAEA,EAcA,SAAA,EAAA,EAAA,EAAA,GACA,IACA,MAAA,CAAA,KAAA,SAAA,IAAA,EAAA,KAAA,EAAA,IACA,MAAA,GACA,MAAA,CAAA,KAAA,QAAA,IAAA,IAhBA,EAAA,KAAA,EAoBA,IAAA,EAAA,iBACA,EAAA,iBACA,EAAA,YACA,EAAA,YAIA,EAAA,GAMA,SAAA,KACA,SAAA,KACA,SAAA,KAIA,IAAA,EAAA,GACA,EAAA,GAAA,WACA,OAAA,MAGA,IAAA,EAAA,OAAA,eACA,EAAA,GAAA,EAAA,EAAA,EAAA,MACA,GACA,IAAA,GACA,EAAA,KAAA,EAAA,KAGA,EAAA,GAGA,IAAA,EAAA,EAAA,UACA,EAAA,UAAA,OAAA,OAAA,GAWA,SAAA,EAAA,GACA,CAAA,OAAA,QAAA,UAAA,QAAA,SAAA,GACA,EAAA,EAAA,EAAA,SAAA,GACA,OAAA,KAAA,QAAA,EAAA,OAkCA,SAAA,EAAA,EAAA,GAgCA,IAAA,EAgCA,KAAA,QA9BA,SAAA,EAAA,GACA,SAAA,IACA,OAAA,IAAA,EAAA,SAAA,EAAA,IAnCA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GACA,GAAA,UAAA,EAAA,KAEA,CACA,IAAA,EAAA,EAAA,IACA,EAAA,EAAA,MACA,OAAA,GACA,iBAAA,GACA,EAAA,KAAA,EAAA,WACA,EAAA,QAAA,EAAA,SAAA,KAAA,SAAA,GACA,EAAA,OAAA,EAAA,EAAA,IACA,SAAA,GACA,EAAA,QAAA,EAAA,EAAA,KAIA,EAAA,QAAA,GAAA,KAAA,SAAA,GAIA,EAAA,MAAA,EACA,EAAA,IACA,SAAA,GAGA,OAAA,EAAA,QAAA,EAAA,EAAA,KAvBA,EAAA,EAAA,KAiCA,CAAA,EAAA,EAAA,EAAA,KAIA,OAAA,EAaA,EAAA,EAAA,KACA,EAGA,GACA,KAkHA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,SAAA,EAAA,QACA,GAAA,IAAA,EAAA,CAKA,GAFA,EAAA,SAAA,KAEA,UAAA,EAAA,OAAA,CAEA,GAAA,EAAA,SAAA,SAGA,EAAA,OAAA,SACA,EAAA,IAAA,EACA,EAAA,EAAA,GAEA,UAAA,EAAA,QAGA,OAAA,EAIA,EAAA,OAAA,QACA,EAAA,IAAA,IAAA,UACA,kDAGA,OAAA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,KAEA,GAAA,UAAA,EAAA,KAIA,OAHA,EAAA,OAAA,QACA,EAAA,IAAA,EAAA,IACA,EAAA,SAAA,KACA,EAGA,IAAA,EAAA,EAAA,IAEA,OAAA,EAOA,EAAA,MAGA,EAAA,EAAA,YAAA,EAAA,MAGA,EAAA,KAAA,EAAA,QAQA,WAAA,EAAA,SACA,EAAA,OAAA,OACA,EAAA,IAAA,GAUA,EAAA,SAAA,KACA,GANA,GA3BA,EAAA,OAAA,QACA,EAAA,IAAA,IAAA,UAAA,oCACA,EAAA,SAAA,KACA,GAoDA,SAAA,EAAA,GACA,IAAA,EAAA,CAAA,OAAA,EAAA,IAEA,KAAA,IACA,EAAA,SAAA,EAAA,IAGA,KAAA,IACA,EAAA,WAAA,EAAA,GACA,EAAA,SAAA,EAAA,IAGA,KAAA,WAAA,KAAA,GAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,KAAA,gBACA,EAAA,IACA,EAAA,WAAA,EAGA,SAAA,EAAA,GAIA,KAAA,WAAA,CAAA,CAAA,OAAA,SACA,EAAA,QAAA,EAAA,MACA,KAAA,OAAA,GA8BA,SAAA,EAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,GAAA,EACA,OAAA,EAAA,KAAA,GAGA,GAAA,mBAAA,EAAA,KACA,OAAA,EAGA,IAAA,MAAA,EAAA,QAAA,CACA,IAAA,GAAA,EAAA,EAAA,SAAA,IACA,OAAA,EAAA,EAAA,QACA,GAAA,EAAA,KAAA,EAAA,GAGA,OAFA,EAAA,MAAA,EAAA,GACA,EAAA,MAAA,EACA,EAOA,OAHA,EAAA,MAAA,EACA,EAAA,MAAA,EAEA,GAGA,OAAA,EAAA,KAAA,GAKA,MAAA,CAAA,KAAA,GAIA,SAAA,IACA,MAAA,CAAA,MAAA,EAAA,MAAA,GA+MA,OA5mBA,EAAA,UAAA,EAAA,YAAA,EACA,EAAA,YAAA,EACA,EAAA,YAAA,EACA,EACA,EACA,qBAaA,EAAA,oBAAA,SAAA,GACA,IAAA,EAAA,mBAAA,GAAA,EAAA,YACA,QAAA,IACA,IAAA,GAGA,uBAAA,EAAA,aAAA,EAAA,QAIA,EAAA,KAAA,SAAA,GAQA,OAPA,OAAA,eACA,OAAA,eAAA,EAAA,IAEA,EAAA,UAAA,EACA,EAAA,EAAA,EAAA,sBAEA,EAAA,UAAA,OAAA,OAAA,GACA,GAOA,EAAA,MAAA,SAAA,GACA,MAAA,CAAA,QAAA,IAsEA,EAAA,EAAA,WACA,EAAA,UAAA,GAAA,WACA,OAAA,MAEA,EAAA,cAAA,EAKA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,SAEA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,GACA,GAGA,OAAA,EAAA,oBAAA,GACA,EACA,EAAA,OAAA,KAAA,SAAA,GACA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAuKA,EAAA,GAEA,EAAA,EAAA,EAAA,aAOA,EAAA,GAAA,WACA,OAAA,MAGA,EAAA,SAAA,WACA,MAAA,sBAkCA,EAAA,KAAA,SAAA,GACA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,KAAA,GAMA,OAJA,EAAA,UAIA,SAAA,IACA,KAAA,EAAA,QAAA,CACA,IAAA,EAAA,EAAA,MACA,GAAA,KAAA,EAGA,OAFA,EAAA,MAAA,EACA,EAAA,MAAA,EACA,EAQA,OADA,EAAA,MAAA,EACA,IAsCA,EAAA,OAAA,EAMA,EAAA,UAAA,CACA,YAAA,EAEA,MAAA,SAAA,GAcA,GAbA,KAAA,KAAA,EACA,KAAA,KAAA,EAGA,KAAA,KAAA,KAAA,MAAA,EACA,KAAA,MAAA,EACA,KAAA,SAAA,KAEA,KAAA,OAAA,OACA,KAAA,IAAA,EAEA,KAAA,WAAA,QAAA,IAEA,EACA,IAAA,IAAA,KAAA,KAEA,MAAA,EAAA,OAAA,IACA,EAAA,KAAA,KAAA,KACA,OAAA,EAAA,MAAA,MACA,KAAA,GAAA,IAMA,KAAA,WACA,KAAA,MAAA,EAEA,IACA,EADA,KAAA,WAAA,GACA,WACA,GAAA,UAAA,EAAA,KACA,MAAA,EAAA,IAGA,OAAA,KAAA,MAGA,kBAAA,SAAA,GACA,GAAA,KAAA,KACA,MAAA,EAGA,IAAA,EAAA,KACA,SAAA,EAAA,EAAA,GAYA,OAXA,EAAA,KAAA,QACA,EAAA,IAAA,EACA,EAAA,KAAA,EAEA,IAGA,EAAA,OAAA,OACA,EAAA,IAAA,KAGA,EAGA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,EAAA,EAAA,WAEA,GAAA,SAAA,EAAA,OAIA,OAAA,EAAA,OAGA,GAAA,EAAA,QAAA,KAAA,KAAA,CACA,IAAA,EAAA,EAAA,KAAA,EAAA,YACA,EAAA,EAAA,KAAA,EAAA,cAEA,GAAA,GAAA,EAAA,CACA,GAAA,KAAA,KAAA,EAAA,SACA,OAAA,EAAA,EAAA,UAAA,GACA,GAAA,KAAA,KAAA,EAAA,WACA,OAAA,EAAA,EAAA,iBAGA,GAAA,GACA,GAAA,KAAA,KAAA,EAAA,SACA,OAAA,EAAA,EAAA,UAAA,OAGA,CAAA,IAAA,EAMA,MAAA,IAAA,MAAA,0CALA,GAAA,KAAA,KAAA,EAAA,WACA,OAAA,EAAA,EAAA,gBAUA,OAAA,SAAA,EAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,QAAA,KAAA,MACA,EAAA,KAAA,EAAA,eACA,KAAA,KAAA,EAAA,WAAA,CACA,IAAA,EAAA,EACA,OAIA,IACA,UAAA,GACA,aAAA,IACA,EAAA,QAAA,GACA,GAAA,EAAA,aAGA,EAAA,MAGA,IAAA,EAAA,EAAA,EAAA,WAAA,GAIA,OAHA,EAAA,KAAA,EACA,EAAA,IAAA,EAEA,GACA,KAAA,OAAA,OACA,KAAA,KAAA,EAAA,WACA,GAGA,KAAA,SAAA,IAGA,SAAA,SAAA,EAAA,GACA,GAAA,UAAA,EAAA,KACA,MAAA,EAAA,IAcA,MAXA,UAAA,EAAA,MACA,aAAA,EAAA,KACA,KAAA,KAAA,EAAA,IACA,WAAA,EAAA,MACA,KAAA,KAAA,KAAA,IAAA,EAAA,IACA,KAAA,OAAA,SACA,KAAA,KAAA,OACA,WAAA,EAAA,MAAA,IACA,KAAA,KAAA,GAGA,GAGA,OAAA,SAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,aAAA,EAGA,OAFA,KAAA,SAAA,EAAA,WAAA,EAAA,UACA,EAAA,GACA,IAKA,MAAA,SAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,WACA,GAAA,UAAA,EAAA,KAAA,CACA,IAAA,EAAA,EAAA,IACA,EAAA,GAEA,OAAA,GAMA,MAAA,IAAA,MAAA,0BAGA,cAAA,SAAA,EAAA,EAAA,GAaA,OAZA,KAAA,SAAA,CACA,SAAA,EAAA,GACA,WAAA,EACA,QAAA,GAGA,SAAA,KAAA,SAGA,KAAA,IAAA,GAGA,IAQA,EA7sBA,CAotBA,iBAAA,OAAA,OAAA,QAAA,IAGA,IACA,mBAAA,EACA,MAAA,GAUA,SAAA,IAAA,yBAAA,CAAA;;ACxuBO,aADA,IAAIA,EACJ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,iBAAA,EAAA,QAAA,SAAA,EAAA,MAAMC,EAAc,KAEzBC,SAASC,cAAc,iBAAiBC,MAAMC,QAAU,QAEpDC,IAAAA,EAAa,EACjBN,QAAAA,SAAAA,EAFkB,GAIZO,MAAAA,EAAcC,IAGV,SAFMC,KAAKC,MAAMF,EAAO,IAAM,KAAOC,KAAKC,MAAMF,EAAO,UAAYC,KAAKC,MAAMF,EAAO,SAC/EA,EAAO,GAAK,KAAOA,EAAO,SAAWA,EAAO,QAgB5DN,SAASC,cAAc,iBAAiBQ,2XAQfJ,EAAWP,0BAG9BY,MAAAA,EAAeV,SAASW,uBAAuB,gCAAgC,GAC/EC,EAAoBZ,SAASW,uBAAuB,sBAAsB,GAEhFD,EAAaR,MAAMW,UAAa,mCAChCD,EAAkBV,MAAMW,UAAa,iCA3BlB,MACXC,MAAAA,EAAgBC,YAAY,KAChCX,GAAc,EACdN,QAAAA,SAAAA,EAbc,GAaSM,EACvBJ,SAASC,cAAc,4BAA4BQ,wBAA0BJ,EAAWP,KACvE,IAAbA,IACFkB,cAAcF,GACdd,SAASC,cAAc,iBAAiBC,MAAMC,QAAU,SAEzD,MAoBLc,IA1CK,QAAA,YAAA;;ACmGP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,aAAA,EArGA,IAAA,EAAA,QAAA,eAEA,MAAMC,EAAelB,SAASmB,eAAe,gBACvCC,EAAiBpB,SAASmB,eAAe,eAClCE,EAAU,CAACC,EAAQC,EAAOC,EAAeC,KAClDP,EAAaQ,0BAA4BH,IACzCH,EAAeM,0FAA4FH,KAASE,oCAAiDD,KAAiBC,MA+F1L,QAAA,QAAA,EA3FA,MAAME,EAAe3B,SAASmB,eAAe,WACvCS,EAAiB5B,SAASmB,eAAe,eACzCU,EAAoB7B,SAASmB,eAAe,mBAC5CW,EAAwB9B,SAASmB,eAAe,uBAChDY,EAAS/B,SAASmB,eAAe,4BAI1Ba,EAAW,CAACV,EAASW,KACrB,IAAA,IAAIC,EAAI,EAAGA,EAAIZ,EAAQa,OAASD,IAAI,CAC/BE,MAAAA,EAASpC,SAASqC,cAAc,OACtCD,EAAOE,qBAAuBJ,IAC9BE,EAAOlC,MAAQ,mJACfF,SAASmB,eAAgB,qBAAoBoB,YAAYH,GAE/CI,MAAAA,EAAYxC,SAASqC,cAAc,OACzCG,EAAUF,cAAgBJ,IAC1BlC,SAASmB,iCAAiCe,KAAKK,YAAYC,GAErDC,MAAAA,EAAMzC,SAASqC,cAAc,OACnCI,EAAIC,6BAA+BT,KAAYX,EAAQY,GAAGS,iBAAmB,QAC7EF,EAAIvC,MAAQ,8EACZF,SAASmB,0BAA0Be,KAAKK,YAAYE,GAG9CG,MAAAA,EAAmB5C,SAASqC,cAAc,OAChDO,EAAiBN,GAAK,cACtBtC,SAASmB,iCAAiCe,KAAKK,YAAYK,GAC3DA,EAAiBlB,aAAeJ,EAAQY,GAAGW,SAErCC,MAAAA,EAAsB9C,SAASqC,cAAc,OACnDS,EAAoBR,GAAK,kBACzBtC,SAASmB,iCAAiCe,KAAKK,YAAYO,GAC3DA,EAAoBpB,aAAeJ,EAAQY,GAAGa,OAExCC,MAAAA,EAA0BhD,SAASqC,cAAc,OACvDW,EAAwBV,GAAK,sBAC7BtC,SAASmB,iCAAiCe,KAAKK,YAAYS,GAC3DA,EAAwBtB,aAAeJ,EAAQY,GAAGe,WAElD3B,EAAQY,GAAGW,SAAWvB,EAAQY,GAAGa,KACjCD,EAAoB5C,MAAQ,iCAE5B4C,EAAoB5C,MAAQ,gCAG5BoB,EAAQY,GAAGW,SAAWvB,EAAQY,GAAGe,SACjCD,EAAwB9C,MAAQ,iCAEhC8C,EAAwB9C,MAAQ,gCAEpC6B,EAAOmB,QAAU,WACR,IAAA,IAAIC,EAAI,EAAGA,GAAK7B,EAAQa,OAAS,EAAGgB,IAAK,CACpCC,MAAAA,EAAUpD,SAASmB,eAAe,qBACxCiC,EAAQC,YAAYD,EAAQE,WAAW,QAqC3D,QAAA,SAAA;;AC0bA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,mBAAA,EA/hBA,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA,cAEO,IAAIC,EAAgB,GA4hB3B,QAAA,cAAA,EA1hBO,MAAMC,EAAY,MAAOC,EAAQxB,KAEpCwB,EAASC,EAAYzB,EAAUwB,GAC/BF,QAAAA,cAAAA,EAAgB,GAGVI,MAAAA,EAAO3D,SAASmB,eAAe,cAC/ByC,EAAS5D,SAASW,uBAAuB,UAAU,GACnDkD,EAAc7D,SAASW,uBAAuB,mBAAmB,GACjEmD,EAAgB9D,SAASW,uBAAuB,2BAA2B,GAC3EoD,EAAkB/D,SAASW,uBAAuB,6BAA6B,GAC/EqD,EAAkBhE,SAASW,uBAAuB,0BAA0B,GAC5EsD,EAAUjE,SAASW,uBAAuB,yBAAyB,GACnEuD,EAAUlE,SAASW,uBAAuB,mBAC1CwD,EAAgBnE,SAASW,uBAAuB,0BAChDyD,EAAgBpE,SAASW,uBAAuB,+BAA+B,GAE/E0D,GADuBrE,SAASW,uBAAuB,+BAA+B,GACrEX,SAASW,uBAAuB,8BAA8B,IAC/E2D,EAAUtE,SAASW,uBAAuB,YAAY,GACtD4D,EAAiBvE,SAASW,uBAAuB,gCAAgC,GAC/DX,SAASW,uBAAuB,8BAA8B,GAGtFyD,EAAclE,MAAMC,QAAU,OAC9B6D,EAAgB9D,MAAMC,QAAU,OAChCyD,EAAO1D,MAAMC,QAAU,OACvB2D,EAAc5D,MAAMC,QAAU,OAC9B4D,EAAgB7D,MAAMC,QAAU,OAChCwD,EAAKzD,MAAMsE,gBAAkB,kBAGzBjD,IAAAA,EAAQ,EAERC,EAAgB,EAChBiD,EAAkB,CAClBC,KAAM,GACNC,IAAK,IAGLC,EAAkB,GAClBC,EAAY,GACZC,EAAgB,GAChBC,EAAc,EAGdC,EAAa,EACbC,GAAe,EACftC,EAAmB,EACnBlB,EAAiB,EAMbQ,OAAAA,GACC,IAAA,SACDoC,EAAe3C,UAAY,gCAC3B,MACC,IAAA,YACD2C,EAAe3C,UAAY,wCAC3B,MACC,IAAA,WACD2C,EAAe3C,UAAY,uCAC3B,MACJ,QACI2C,EAAe3C,UAAY,gCAM/B,IAAA,WAAEwD,EAAF,eAAcC,EAAd,kBAA8BC,EAA9B,mBAAiDC,SAA6BC,EAAS7B,EAASoB,EAAWD,GA6BhGW,eAAAA,EAAaC,GASpBA,GAPJC,EAAatB,GACbI,EAAe7C,UAAY,GAE3BD,IAII+D,GAAU,GAAKA,GAAU,EAAG,CACxBE,IAAAA,EAAe,CACf7C,OAAQ,GACRE,KAAM,GACNE,SAAU,GACVN,iBAAkB,GAItBwB,EAAc,GAAGwB,oBAAoB,QAASC,GAAkB,GAChEzB,EAAc,GAAGwB,oBAAoB,QAASE,GAAkB,GAChE1B,EAAc,GAAGwB,oBAAoB,QAASG,GAAkB,GAChE3B,EAAc,GAAGwB,oBAAoB,QAASI,GAAkB,GAG5D,IAAA,eAAEC,EAAF,cAAkBC,GAAkBC,EAAazB,GACrDjD,GAAiByE,EAGjBP,EAAa7C,OAASsB,EAAcY,GAAarD,UACjDgE,EAAa3C,KAAOoB,EAAcqB,GAAQ9D,UAC1CgE,EAAa/C,iBAAmBA,EAChC+C,EAAazC,SAAWkB,EAAc6B,GAAgBtE,UACtD6B,EAAc4C,KAAKT,GAEnBnB,EAAe7C,aAAegE,EAAazC,WAEvCgD,EACA1B,EAAe6B,UAAUC,IAAI,eAE7B9B,EAAe6B,UAAUC,IAAI,cAG7Bb,GAAUT,EACVxD,GAAS,EAGT4C,EAAcqB,GAAQY,UAAUC,IAAI,cAExClC,EAAcY,GAAaqB,UAAUC,IAAI,eACzClC,EAAcqB,GAAQY,UAAUC,IAAI,yBAE9BC,EAAY,KAClBnC,EAAcqB,GAAQY,UAAUG,OAAO,mBACvCpC,EAAcY,GAAaqB,UAAUG,OAAO,eAC5CpC,EAAcqB,GAAQY,UAAUG,OAAO,cACvCpC,EAAc6B,GAAgBI,UAAUG,OAAO,mBAC/ChC,EAAe6B,UAAUG,OAAO,cAChChC,EAAe6B,UAAUG,OAAO,eAChChC,EAAe7C,UAAY,GAE3B+D,EAAatB,GAGbA,EAAc,GAAGqC,iBAAiB,QAASZ,GAC3CzB,EAAc,GAAGqC,iBAAiB,QAASX,GAC3C1B,EAAc,GAAGqC,iBAAiB,QAASV,GAC3C3B,EAAc,GAAGqC,iBAAiB,QAAST,GAM3C,IAAA,OAAElD,EAAF,SAAU4D,GAAaC,EAAe9B,EAAiBE,GAEvDjC,IAAW,GAAXA,EAAc,OACRyD,EAAY,IAClB3D,EAAmBE,EAAO6B,KAC1BT,EAAQ/D,MAAMyG,6CAA+C1E,KAAYY,EAAO6B,KAAO,eACjF4B,EAAY,KACdM,IAAAA,EAAcC,IAClB3C,EAAQ0C,EAAYlC,MAAMhD,UAAYkD,EAAgB/B,EAAO6B,MAC7DR,EAAQ0C,EAAYjC,IAAI,IAAIjD,UAAYkD,EAAgB/B,EAAO8B,IAAI,IACnET,EAAQ0C,EAAYjC,IAAI,IAAIjD,UAAYkD,EAAgB/B,EAAO8B,IAAI,IACnET,EAAQ0C,EAAYjC,IAAI,IAAIjD,UAAYkD,EAAgB/B,EAAO8B,IAAI,IACnEF,EAAgBC,KAAOkC,EAAYlC,KACnCD,EAAgBE,IAAM,CAACiC,EAAYjC,IAAI,GAAIiC,EAAYjC,IAAI,GAAIiC,EAAYjC,IAAI,IAC/EI,EAAc6B,EAAYlC,UAG1Bb,EAAY3D,MAAMC,QAAU,OAC5B2D,EAAc5D,MAAMC,QAAU,OAC9B4D,EAAgB7D,MAAMC,QAAU,aAC1BmG,EAAY,MACV/C,EAAAA,EAAAA,SAAAA,EAAehC,EAAOC,EAAeC,IACpC8B,EAAAA,EAAAA,UAAAA,EAAetB,GACxB4B,EAAY3D,MAAMC,QAAU,OAC5BmE,EAAQpE,MAAMC,QAAU,OAIxBoB,EAAQ,EACRC,EAAgB,EAShB+B,QAAAA,cAAAA,EAAgB,GAChBA,EAAcpB,OAAS,EACvB2C,EAAc3C,OAAS,EACvB2C,EAAgB,GAChBX,EAAc,GAAGwB,oBAAoB,QAASC,GAAkB,GAChEzB,EAAc,GAAGwB,oBAAoB,QAASE,GAAkB,GAChE1B,EAAc,GAAGwB,oBAAoB,QAASG,GAAkB,GAChE3B,EAAc,GAAGwB,oBAAoB,QAASI,GAAkB,GAI/DH,SAAAA,IACLL,EAAa,GAERM,SAAAA,IACLN,EAAa,GAERO,SAAAA,IACLP,EAAa,GAERQ,SAAAA,IACLR,EAAa,GA7JbL,IAEAF,EAAazE,KAAKuG,KAAK1B,EAAoBC,IAI/C0B,EAAWtD,EAAQyB,EAAYF,EAAY/C,EAAU4C,EAAWD,GAGhEW,KAnFiD,EAAA,EAAA,eAwFjDpB,EAAc,GAAGqC,iBAAiB,QAASZ,GAC3CzB,EAAc,GAAGqC,iBAAiB,QAASX,GAC3C1B,EAAc,GAAGqC,iBAAiB,QAASV,GAC3C3B,EAAc,GAAGqC,iBAAiB,QAAST,GAG3CnC,EAAO1D,MAAMC,QAAU,OACvB2D,EAAc5D,MAAMC,QAAU,QAC9B4D,EAAgB7D,MAAMC,QAAU,QAChCwD,EAAKzD,MAAMsE,gBAAkB,cAyIvBwC,MAAAA,EAAYjG,YAAY,KACtBjB,EAAY,UAAA,IACJyD,EAAAA,EAAAA,SAAAA,EAAehC,EAAOC,EAAeC,IACpC8B,EAAAA,EAAAA,UAAAA,EAAetB,EAAUsB,GAClC0B,GAAe,EACfjB,EAAgB9D,MAAMC,QAAU,OAChCmE,EAAQpE,MAAMC,QAAU,OACxB8G,aAAaC,QAAQ,kBAAmB3F,GACxC0F,aAAaC,QAAQ,iBAAkBzF,GACvCzB,SAASmB,eAAe,qBAAqBgG,QAC7CnG,cAAcgG,GAGdzF,EAAQ,EACRC,EAAgB,EAShB+B,QAAAA,cAAAA,EAAgB,GAChBA,EAAcpB,OAAS,EACvB2C,EAAc3C,OAAS,EACvB2C,EAAgB,GAChBX,EAAc,GAAGwB,oBAAoB,QAASC,GAAkB,GAChEzB,EAAc,GAAGwB,oBAAoB,QAASE,GAAkB,GAChE1B,EAAc,GAAGwB,oBAAoB,QAASG,GAAkB,GAChE3B,EAAc,GAAGwB,oBAAoB,QAASI,GAAkB,IAGhEd,GAAe,GAEpB,MAOP,SAASmC,EAAc3D,EAAQxB,GAE3BoF,EAAaC,QAAQ5D,EAAYzB,EAAUwB,GAAQ,IADnC,GACsD,SAAU,QAKpF,SAAS6C,EAAYhG,GACV,OAAA,IAAIiH,QAAQC,IACfC,WAAW,KACPD,EAAQ,aACTlH,KAKX,eAAegF,EAAQoC,EAAK7C,EAAWD,GAC/BM,IAAAA,EACAC,EACAwC,EAEAC,EAEEC,MAAAA,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAoCtB7C,OAlCJ0C,EAAkBH,WAAW,KAEzBI,EAAWG,QACX7C,GAAkB,GACnB,WAEG8C,MAAMP,EAAK,CACbQ,OAAQ,MACRH,OAAQA,IAEPI,KAAK,MAAA,IACEC,GAAAA,EAASC,GAAI,CACTC,IAAAA,EAAOF,EAASG,OAIbD,OAHPX,EAAcW,EACdpD,GAAa,EACbC,EAAiBiD,EAASI,OACnBF,KAIdH,KAAKG,IACFX,EAAcW,EACT,IAAA,MAAMlF,KAAWkF,EAAKG,QACvB5D,EAAUsB,KAAK/C,KAGtBsF,MAAM,KACHC,MAAM,wCACgB,KAAlBxD,IACAD,GAAa,KAKrBA,GACAmC,EAAaxC,EAAWD,EAAiB,QAClC,CACHM,WAAYA,EACZC,eAAgBA,EAChBC,kBAAmBuC,EAAYiB,MAC/BvD,mBAAoBsC,EAAYc,QAAQtG,SAIrC,CACH+C,YAAY,EACZC,eAAgBA,EAChBC,kBAAmB,EACnBC,mBAAoB,GAOhC,eAAe0B,EAAWtD,EAAQyB,EAAYF,EAAY/C,EAAU4C,EAAWD,GACvEiE,IAAAA,EACA3D,GAAAA,EACK,IAAA,IAAI4D,EAAI,EAAGA,EAAI9D,EAAY8D,IAE5BxD,EADAuD,2BAAmC5G,YAAqB6G,EAAI,GAC3CjE,EAAWD,SACtB0B,EAAY,SAGrB,CACGgC,IAAAA,EACIrG,OAAAA,GACC,IAAA,SAEDoF,EADAiB,EAAOhB,QAAS,uCACG1C,EAAiB,SAAU,QAC9C,MACC,IAAA,YAEDyC,EADAiB,EAAOhB,QAAS,0CACG1C,EAAiB,SAAU,kBAC9C,MACC,IAAA,WAEDyC,EADAiB,EAAOhB,QAAS,yCACG1C,EAAiB,SAAU,iBAC9C,MACJ,QAEIyC,EADAiB,EAAOhB,QAAS,uCACG1C,EAAiB,SAAU,UAU9D,SAASlB,EAAYzB,EAAW,SAAUwB,EAAS,GAAIsF,GAAW,GAC1DC,IAAAA,EACA,GAACD,EAkBGC,EADY,UAAZ/G,GAAoC,YAAZA,GAAsC,aAAZA,6BACXA,SAG1B,2CApBTA,OAAAA,GACC,IAAA,SACD+G,EAAYvF,EAAS,WACrB,MACC,IAAA,YACDuF,EAAYvF,EAAS,cACrB,MACC,IAAA,WACDuF,EAAYvF,EAAS,aACrB,MACJ,QACIuF,EAAYvF,EAAS,WAY1BuF,OAAAA,EAIX,SAAS3B,EAAa4B,EAAQ,GAAIC,EAAS,GAAIC,EAAU,GAAIC,EAAU,IAC/DC,IAAAA,EAAgBF,EAChBG,EAAgBF,EACf,IAAA,IAAIlH,EAAI,EAAGA,EAAI+G,EAAM9G,OAAQD,IAC9BiH,EAAQhH,OAAS,EAAKiH,EAAQjH,OAAS,EAAI+G,EAAOhH,GAAK+G,EAAM/G,GAAGmH,GAAeC,GAAiBJ,EAAOhH,GAAK+G,EAAM/G,GAAGmH,GAAkBH,EAAOhH,GAAK+G,EAAM/G,GAEtJgH,OAAAA,EAKX,SAASxC,EAAe6C,EAAWzE,EAAgB,IAE3C0E,IACAC,EADAD,GAAU,EAEVE,EAAkB,GAClBC,GAAkB,EAClBC,EAAML,EAAUpH,OAAS,EAGxBoH,GAAAA,EAAUpH,OAAS2C,EAAc3C,QAAYoH,EAAUpH,OAAS,EAAI,CAClE,EAAA,CAEO0H,MAAAA,EAAiBtJ,KAAKC,MAAMD,KAAKuJ,UAAYF,EALjD,EAK6D,GAL7D,GAMFJ,GAAU,EAEL,IAAA,IAAIO,KAAUjF,EACXiF,GAAUF,IACVL,GAAU,GAIbA,IACD1E,EAAcqB,KAAK0D,GACnBJ,EAAmBI,SAGpBL,GAEJ,EAAA,CACCG,GAAkB,EACZK,MAAAA,EAAgBzJ,KAAKC,MAAMD,KAAKuJ,UAAYF,EAvBhD,EAuB4D,GAvB5D,GAwBIK,EAAgB1J,KAAKC,MAAMD,KAAKuJ,UAAYF,EAxBhD,EAwB4D,GAxB5D,GAyBIM,EAAgB3J,KAAKC,MAAMD,KAAKuJ,UAAYF,EAzBhD,EAyB4D,GAzB5D,GA0BEH,GAAoBO,GAAiBP,GAAoBQ,GAAiBR,GAAoBS,GAC3FF,GAAiBP,GAAoBO,GAAiBC,GAAiBD,GAAiBE,GACxFD,GAAiBR,GAAoBQ,GAAiBD,GAAiBC,GAAiBC,GACxFA,GAAiBT,GAAoBS,GAAiBF,GAAiBE,GAAiBD,IAC3FN,GAAkB,EAClBD,EAAgBvD,KAAK6D,GACrBN,EAAgBvD,KAAK8D,GACrBP,EAAgBvD,KAAK+D,WAGrBP,GAUDQ,MARG,CACNtH,OAAQ,CACJ6B,KAAM+E,EACN9E,IAAK,CAAC+E,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,KAElEjD,SAAU3B,EACVyE,UAAWA,GAURY,MALG,CACNtH,QAAS,EACT4D,SAAU3B,EACVyE,UAAWA,GASvB,SAAS1C,IAGCuD,MAAAA,EAAO,CAAC,EAAG,EAAG,EAAG,GACjBC,EAAa9J,KAAKC,MAAuBoJ,EAAjBrJ,KAAKuJ,SAFzB,GAGNQ,IAAAA,EAAQF,EAAKG,QAAQF,GAMlBF,OALPC,EAAKI,OAAOF,EAAO,GACT,CACN5F,KAAM2F,EACN1F,IAAKyF,GAKb,SAASlE,EAAazB,GACdmF,IAAAA,EAAMnF,EAAgBC,KAEfD,EAAgBC,KACjBD,EAAgBE,IACpBqB,MAAAA,EAAiBzF,KAAKC,MAAMD,KAAKuJ,UAAYF,EAHzC,EAGqD,GAHrD,GAIN3D,IAAAA,EAEG,MAAA,CAAED,eAAAA,EAAgBC,cADkBA,EAA1CD,GAAkBvB,EAAgBC,KAAwB,EAAoB,GAKnF,SAASe,EAAatB,GACb,IAAA,IAAIjC,EAAI,EAAGA,EAAIiC,EAAchC,OAAQD,IACtCiC,EAAcjC,GAAGkE,UAAUG,OAAO,mBAClCpC,EAAcjC,GAAGkE,UAAUG,OAAO,eAClCpC,EAAcjC,GAAGkE,UAAUG,OAAO,cAClCpC,EAAcjC,GAAGkE,UAAUG,OAAO,mBAK1C,QAAA,UAAA,EAAAkE,OAAOC,QAAU,CAAElH,UAAAA,EAAWqD,aAAAA,EAAcH,eAAAA;;AClX3C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,EAAA,QAAA,cAAA,EAAA,QAAA,WAAA,EA7KD,IAAA,EAAA,QAAA,cAGA,MAAMiE,EAAa,CACP,OAAA,CACC,MAAA,yBACA,MAAA,6LAIH,IAAA,4FAEI,SAAA,CACD,MAAA,iCACC,MAAA,2LAGJ,IAAA,6FAEK,UAAA,CACF,MAAA,kCACA,MAAA,4LAGD,IAAA,gGAINC,EAAY5K,SAAS6K,iBAAiB,sBAOrC,SAASC,EAAuBC,GAEjCH,IAAAA,EAAY5K,SAAS6K,iBAAiB,sBACb,UAAzBE,EAAEC,OAAOC,YACXF,EAAEC,OAAOC,YAAc,eACW,iBAAzBF,EAAEC,OAAOC,cAClBF,EAAEC,OAAOC,YAAc,SAEzBL,EAAUM,QAAQC,IACZA,EAAK/E,UAAUgF,SAAS,wBAC1BC,EAAWF,EAAK7I,MAMf,SAAS+I,EAAWpJ,GACnBqJ,MAAAA,EAAYtL,SAASC,cAAc,eACnCsL,EAAcvL,SAASC,cAAc,UACrCuL,EAAqBxL,SAASC,cAAc,iBAC5CwL,EAAYzL,SAASC,cAAc,mBACrCyL,IAAAA,EAAU,GACNzJ,OAAAA,GACD,IAAA,SACHyJ,EAAUC,KAAKC,MAAM3E,aAAa4E,QAAS,sBAAuB,GAClE,MACG,IAAA,WACHH,EAAUC,KAAKC,MAAM3E,aAAa4E,QAAS,uBAAwB,GACnE,MACG,IAAA,YACHH,EAAUC,KAAKC,MAAM3E,aAAa4E,QAAS,wBAAyB,GAIxEJ,EAAUhL,UAAakK,EAAW1I,GAAU6J,IAC5CR,EAAUL,YAAcN,EAAW1I,GAAU8J,MAC7CR,EAAY9K,UAA+C,iBAAnC+K,EAAmBP,YACzC,sDAAwDN,EAAW1I,GAAU+J,MAAQ,aACrFN,EAAQvJ,OACN,6GACAuJ,EAAQO,OAAO,CAAClB,EAAG7I,IAAMA,EAAI,GAAGgK,IAAI,CAACC,EAAQ7J,KAGpC,MAAA,YAFGA,EAAK,GAES,yCAA2C6J,EAAOC,KAAO,mBAAqBD,EAAO5K,MAAQ,IAAM4K,EAAOE,UAChI,YAAYF,EAAOG,cAAcC,QAAQ,GAAG,gBAC7CC,KAAK,KAAO,kHACf,kEAEmC,iBAAnChB,EAAmBP,aAAkCS,EAAQvJ,QAC/DsK,EAAuBf,GAvD3Bd,EAAUM,QAAQC,IACZA,EAAK/E,UAAUgF,SAAS,wBAC1BC,EAAWF,EAAK7I,MAwDpB,MAAMoK,EAAQ1M,SAASmB,eAAe,sBACtC,IAAIwL,EAAO3M,SAASW,uBAAuB,SAAS,GAUpD,SAAS8L,EAAuBG,GACX5M,SAASmB,eAAe,mBAC9BqF,iBAAiB,QAAS,KACrCqG,EAAiBD,KAKrB,SAASC,EAAiBD,GACD5M,SAASC,cAAc,eAC7BQ,UAAY,uFAC3BmM,EAAaV,IAAI,CAACC,EAAQ7J,KAEjB,MAAA,YADGA,EAAK,GACS,yCAA2C6J,EAAOC,KAAO,mBAAqBD,EAAO5K,MAAQ,IAAM4K,EAAOE,UAChI,YAAYF,EAAOG,cAAcC,QAAQ,GAAG,gBAC7CC,KAAK,KAAO,iBACjBE,EAAMxM,MAAMC,QAAU,QAzBxBwM,EAAKnG,iBAAiB,QAAS,IAAMkG,EAAMxM,MAAMC,QAAU,QAE3D2M,OAAOtG,iBAAiB,QACrBuE,IACKA,EAAEC,SAAW0B,IACfA,EAAMxM,MAAMC,QAAU,UAuB5B,MAAM4M,EAAW/M,SAASmB,eAAe,4BAElC,SAAS6L,EAAejC,GAC7BA,EAAEkC,iBACGF,EAASG,QAASH,EAASG,MAAQ,UAEhCC,MAAAA,EAAY,CACd5L,MAAO0F,aAAa4E,QAAQ,mBAC5BQ,UAAWpF,aAAa4E,QAAQ,kBAChCS,cAAiBrF,aAAa4E,QAAQ,mBAAqB5E,aAAa4E,QAAQ,kBAAqB,IACrGO,KAAMW,EAASG,OAGZjL,OAAAA,EAAP,UACO,IAAA,SACHmL,EAAyB,mBAAoBD,GAC7C,MACG,IAAA,WACHC,EAAyB,oBAAqBD,GAC9C,MACG,IAAA,YACHC,EAAyB,qBAAsBD,IAIvD,SAASC,EAAyBC,EAAUF,GACpCG,MAAAA,EAAa3B,KAAKC,MAAM3E,aAAa4E,QAAQwB,KAAc,GAC7DpG,GAAAA,aAAa4E,QAAQwB,GAAW,CAC5BE,MAAAA,EAAUD,EAAWrB,OAAOlJ,GACzBgK,EAASG,QAAUnK,EAAKqJ,MAE7BmB,GAAAA,EAAQpL,OAAS,GACfoL,GAAAA,EAAQ,GAAGjB,cAAgBa,EAAUb,cAAe,CACtDiB,EAAQ,GAAGhM,MAAQ0F,aAAa4E,QAAQ,mBACxC0B,EAAQ,GAAGlB,UAAYpF,aAAa4E,QAAQ,kBAC5C0B,EAAQ,GAAGjB,cAAiBrF,aAAa4E,QAAQ,mBAAsB5E,aAAa4E,QAAQ,kBAAsB,IAE5GvB,MAAAA,EAAQgD,EAAWE,UAAUzK,GAAQA,EAAKqJ,MAAQW,EAASG,OACjEI,EAAW9C,OAAOF,EAAO,GACzBgD,EAAWnH,KAAKoH,EAAQ,UAG1BD,EAAWnH,KAAKgH,QAGlBG,EAAWnH,KAAKgH,GAElBG,EAAWG,KAAK,CAACC,EAAGC,IACXA,EAAErB,cAAgBoB,EAAEpB,eAEzBsB,IAAAA,EAAa5N,SAASC,cAAc,aACpC4N,EAAe7N,SAASC,cAAc,mBAC1CgH,aAAaC,QAAQmG,EAAU1B,KAAKmC,UAAUR,IAC9CM,EAAW1N,MAAMC,QAAU,OAC3B0N,EAAa3N,MAAMC,QAAU,SAC7B0M,EAAiBS;;AC3JlB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAAA,QAAA,iBAAA,EAjBD,IAAA,EAAA,QAAA,uBACA,EAAA,QAAA,SAEA,MAAM1C,EAAY5K,SAAS6K,iBAAiB,sBACrC,IAAI5I,EAAW,SAGf,SAAS8L,EAAiBhD,GAC1B,GAACiD,EAAJ,cAAG,CACA,IAACjD,EAAEC,OAAO5E,UAAUgF,SAAS,uBAAwB,CAC/C,IAAA,IAAIlJ,EAAI,EAAGA,EAAI0I,EAAUzI,OAAQD,IAClC0I,EAAU1I,GAAGkE,UAAUG,OAAO,uBAElCwE,EAAEC,OAAO5E,UAAUC,IAAI,uBACvBpE,QAAAA,SAAAA,EAAW8I,EAAEC,OAAOtJ,UAAUuM,eAEvBhM,EAAAA,EAAAA,YAAAA,IACd,QAAA,SAAA,EAZD2I,EAAUM,QAAQC,GAAQA,EAAK3E,iBAAiB,QAASuH;;ACDlD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,QAAA,SAAA,EAJP,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,cACA,EAAA,QAAA,uBACO,IAAIC,GAAgB,EACpB,QAAA,cAAA,EAAA,MAAME,EAAM,EAAEhK,QAAAA,MACbiK,MAAAA,EAAQnO,SAASW,uBAAuB,iBAAiB,GACzDyN,EAAQpO,SAASmB,eAAe,kBAItCgN,EAAM3H,iBAAiB,QAAS,MACpBtC,EAAAA,EAAAA,WAAAA,EAAQmK,gBAAgBpM,EAAS,YAC3CmM,EAAMlO,MAAMC,QAAQ,OACpB6N,QAAAA,cAAAA,GAAgB,IAIShO,SAASC,cAAc,iBAC/BuG,iBAAiB,QAASsE,EAA7C,wBAEqB9K,SAASmB,eAAe,4BAChCqF,iBAAiB,QAAQuE,KAAoBA,EAAAA,EAAAA,eAAAA,GAAIiD,QAAAA,cAAAA,GAAgB,KAjBzE,QAAA,IAAA;;ACKP,aATA,QAAA,+CACA,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,qBAEA,MAAMM,EAAoB,IACpBC,EAAkB,wBAClBC,EAAoD,KAE1D1B,OAAO2B,OAAS,MAAM,EAAI,EAAA,KAAA,CAACvK,QAAS,CAACmK,aAAcE,EAAiBG,YAFV","file":"src.90a10178.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\nexport let timeLeft;\nexport const ProgressBar = () => {\n\n  document.querySelector('.progress-bar').style.display = \"block\"; \n  const timeLimit = 60;\n  let timePassed = 0;\n  timeLeft = timeLimit;\n\n  const formatTime = (time) => {\n    let minutes = Math.floor(time / 60) > 9 ? `${Math.floor(time / 60)}` : `0${Math.floor(time / 60)}`;\n    let seconds = time % 60 > 9 ? `${time % 60}` : `0${time % 60}`;\n    return `${minutes}:${seconds}`;\n  }\n\n  const startTimer = () => {\n    const timerInterval = setInterval(() => {\n      timePassed += 1;\n      timeLeft = timeLimit - timePassed;\n      document.querySelector('.progress-bar-timer>span').innerHTML = `Time left: ${formatTime(timeLeft)}`;\n      if (timeLeft === 0) {\n        clearInterval(timerInterval);\n        document.querySelector('.progress-bar').style.display = \"none\";\n      }\n    }, 1000)\n  }\n\n  document.querySelector('.progress-bar').innerHTML =\n     `<div class=\"progress-bar-wrapper\">\n        <figure class=\"progress-bar-lightsaber-handle\"><img src=\"static/assets/ui/LightsaberHandle.png\" alt=\"\"></figure>\n        <div class=\"progress-bar-lightsaber-empty\">\n          <div class=\"progress-bar-lightsaber-full\"></div>\n        </div>\n      </div>\n      <div class=\"progress-bar-timer\">\n        <span>Time left: ${formatTime(timeLeft)}</span>\n      </div>`\n\n  const animationBar = document.getElementsByClassName('progress-bar-lightsaber-full')[0];\n  const animationBarTimer = document.getElementsByClassName('progress-bar-timer')[0];\n\n  animationBar.style.animation = `progress-bar ${timeLimit}s linear forwards`;\n  animationBarTimer.style.animation = `text-color ${timeLimit}s linear forwards`;\n\n  startTimer();\n}\n","import { AnswersRaport } from \"./Questions\";\n\nconst endGameScore = document.getElementById('end-result-p');\nconst endGameSummary = document.getElementById('end-summary');\nexport const EndGame = (Answers,score, computerScore, questionsShown) => { \n    endGameScore.innerText = `YOUR RESULT: ${score}`;\n    endGameSummary.innerText = `The force is strong in you, young Padawan! During 1 minute you have answered ${score}/${questionsShown} questions and computer guessed ${computerScore}/${questionsShown}.`;\n}\n\n\nconst endGameImage = document.getElementById('end-img');\nconst endGameCorrect = document.getElementById('end-correct');\nconst endGameYourAnswer = document.getElementById('end-your-answer');\nconst endGameComputerAnswer = document.getElementById('end-computer-answer');\nconst button = document.getElementById('save-hall-of-fame-button')\n\n\n\nexport const EndTable = (Answers, category) => {\n        for (let i = 0; i < Answers.length ; i++){\n            const newDiv = document.createElement('div');\n            newDiv.id = `end-answer-row-${i}`\n            newDiv.style = 'height: 130px; text-align: center; padding-left: 1rem; width: 100%; align-items: center; display: grid;grid-template-columns: 0.8fr 1fr 1fr 1fr;'\n            document.getElementById(`end-answers-table`).appendChild(newDiv);\n\n                const newDivImg = document.createElement('div');\n                newDivImg.id = `end-img-${i}`\n                document.getElementById(`end-answer-row-${i}`).appendChild(newDivImg);\n\n                const img = document.createElement('img');\n                img.src = `./static/assets/modes/${category}/${Answers[i].numberOfQuestion + 1}.png`;\n                img.style = 'object-fit: cover; max-width: 100px; max-height: 100px; border-radius: 20px'\n                document.getElementById(`end-img-${i}`).appendChild(img);\n\n\n                const newDivEndCorrect = document.createElement('div');\n                newDivEndCorrect.id = 'end-correct'\n                document.getElementById(`end-answer-row-${i}`).appendChild(newDivEndCorrect);\n                newDivEndCorrect.innerText = `${Answers[i].answer}`;\n\n                const newDivEndYourAnswer = document.createElement('div');\n                newDivEndYourAnswer.id = 'end-your-answer'\n                document.getElementById(`end-answer-row-${i}`).appendChild(newDivEndYourAnswer);\n                newDivEndYourAnswer.innerText = `${Answers[i].user}`;\n\n                const newDivEndComputerAnswer = document.createElement('div');\n                newDivEndComputerAnswer.id = 'end-computer-answer'\n                document.getElementById(`end-answer-row-${i}`).appendChild(newDivEndComputerAnswer);\n                newDivEndComputerAnswer.innerText = `${Answers[i].computer}`;\n            \n            if (Answers[i].answer === Answers[i].user) {\n                newDivEndYourAnswer.style = 'color: green; font-weight: 600'\n            } else {\n                newDivEndYourAnswer.style = 'color: red; font-weight: 600;'\n            }\n\n            if (Answers[i].answer === Answers[i].computer) {\n                newDivEndComputerAnswer.style = 'color: green; font-weight: 600'\n            } else {\n                newDivEndComputerAnswer.style = 'color: red; font-weight: 600;'\n            }\n            button.onclick = function Clear() {\n                for (let p = 0; p <= Answers.length + 2; p++) {\n                    const element = document.getElementById(\"end-answers-table\");\n                    element.removeChild(element.childNodes[0]);\n                }\n            }\n\n        }\n\n\n}\n\n// button.onclick = function Clear() {\n//     newDivEndCorrect.remove()\n//     newDivImg.remove()\n//     img.remove()\n//     newDivEndYourAnswer.remove()\n//     newDivEndComputerAnswer.remove()\n// }\n\n\n// function Clear1 (){\n//     newDivEndCorrect.remove();\n// };\n// function Clear2 (){\n//     newDivImg.remove();\n// };\n// function Clear3 (){\n//     img.remove();\n// };\n// function Clear4 (){\n//     newDivEndYourAnswer.remove()\n// }\n// function Clear5 (){\n//     newDivEndComputerAnswer.remove()\n// }\n// button.addEventListener('click', Clear1, false);\n// button.addEventListener('click', Clear2, false);\n// button.addEventListener('click', Clear3, false);\n// button.addEventListener('click', Clear4, false);\n// button.addEventListener('click', Clear5, false);","import { ProgressBar, timeLeft } from \"./ProgressBar\";\nimport { EndGame, EndTable } from \"./GameOver\";\n\nexport let AnswersRaport = [];\n\nexport const Questions = async (APIurl, category) => {\n    //Adjust API url to category get from menu: // Now temporary get always people\n    APIurl = setCategory(category, APIurl);\n    AnswersRaport = [];\n\n    // Get picture and options HTML element to edit it according to data from API\n    const quiz = document.getElementById('swquiz-app');\n    const loader = document.getElementsByClassName('loader')[0];\n    const questionEnd = document.getElementsByClassName('question-finish')[0];\n    const questionImage = document.getElementsByClassName('question-image__wrapper')[0];\n    const questionContent = document.getElementsByClassName('question-content__wrapper')[0];\n    const questionWrapper = document.getElementsByClassName('main-question__wrapper')[0];\n    const picture = document.getElementsByClassName('question-image__image')[0];\n    const options = document.getElementsByClassName('p-content--item');\n    const optionWrapper = document.getElementsByClassName('question-content--item');\n    const questionError = document.getElementsByClassName('question-api-error__wrapper')[0];\n    const questionErrorContent = document.getElementsByClassName('question-api-error--content')[0];\n    const questionHeader = document.getElementsByClassName('p-content--header-question')[0];\n    const endGame = document.getElementsByClassName('end-game')[0];\n    const computerAnswer = document.getElementsByClassName('p-content--computer-question')[0];\n    const computerWrapper = document.getElementsByClassName('question-content--computer')[0];\n\n    //Starting visibility\n    questionError.style.display = \"none\";\n    questionWrapper.style.display = \"flex\";\n    loader.style.display = \"flex\";\n    questionImage.style.display = \"none\";\n    questionContent.style.display = \"none\";\n    quiz.style.backgroundColor = \"rgba(0,0,0,0.5)\";\n\n    //declaration of used variables\n    let score = 0;\n    //Computer Game:\n    let computerScore = 0;\n    let computerAnswers = {\n        good: \"\",\n        bad: []\n    }\n    //var StarWarsData;\n    let QuestionsPeople = [];\n    let fetchData = [];\n    let selectedArray = [];\n    let rightOption = 0;\n    //let responseStatus;\n    //let responseOk = true;\n    let iterations = 0;\n    let questionsEnd = false;\n    let numberOfQuestion = 0;\n    let questionsShown = 0;\n\n    // Use cors-anywhere to avoid blocking trasnfer data from API in browser\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n    //change header display:\n    switch (category) {\n        case \"people\":\n            questionHeader.innerText = \"MODE: Who is this character? \";\n            break;\n        case \"starships\":\n            questionHeader.innerText = \"MODE: What kind of starship is this? \";\n            break;\n        case \"vehicles\":\n            questionHeader.innerText = \"MODE: What kind of vehicle is this? \";\n            break;\n        default:\n            questionHeader.innerText = \"MODE: Who is this character? \";\n            break;\n    }\n\n\n    // Get data from API - first 10 elements\n    var { responseOk, responseStatus, StarWarsDataCount, StarWarsDataLength } = await getData((APIurl), fetchData, QuestionsPeople);\n\n    // If data fetched properly with status 200 -> success\n    if (responseOk) {\n        // get amount of whole questions and divided it into packages of 10 elements\n        iterations = Math.ceil(StarWarsDataCount / StarWarsDataLength);\n    }\n\n    //Get rest of data from REST API\n    getAllData(APIurl, responseOk, iterations, category, fetchData, QuestionsPeople);\n\n    //Firstly, show question without argument - random question.\n    showQuestion();\n    ProgressBar();\n\n    //According to clicked option send argument to function and it's checks if answer is correct, or not.\n    //TODO - this also should be a separate function\n    optionWrapper[0].addEventListener(\"click\", queston1Listener);\n    optionWrapper[1].addEventListener(\"click\", queston2Listener);\n    optionWrapper[2].addEventListener(\"click\", queston3Listener);\n    optionWrapper[3].addEventListener(\"click\", queston4Listener);\n\n    //change visibility:\n    loader.style.display = \"none\";\n    questionImage.style.display = \"block\";\n    questionContent.style.display = \"block\";\n    quiz.style.backgroundColor = \"transparent\";\n\n    //This function show question in HTML elements.\n    async function showQuestion(select) {\n        // If we call function with argument (options button)\n        cleanAnswers(optionWrapper);\n        computerAnswer.innerText = \"\";\n        //computerWrapper.style.opacity = \"0\";\n        questionsShown++;\n\n\n        // USER question handle\n        if (select >= 0 && select <= 3) {\n            let AnswerRaport = {\n                answer: \"\",\n                user: \"\",\n                computer: \"\",\n                numberOfQuestion: 0\n            }\n\n            //Remove event listeners to avoid situation when somebody click buttons after send answer\n            optionWrapper[0].removeEventListener(\"click\", queston1Listener, false);\n            optionWrapper[1].removeEventListener(\"click\", queston2Listener, false);\n            optionWrapper[2].removeEventListener(\"click\", queston3Listener, false);\n            optionWrapper[3].removeEventListener(\"click\", queston4Listener, false);\n\n            // Computer question handle!\n            let { computerChoise, computerPoint } = computerPlay(computerAnswers);\n            computerScore += computerPoint;\n            //optionWrapper[computerChoise].classList.add(\"answer-computer\");\n\n            AnswerRaport.answer = optionWrapper[rightOption].innerText;\n            AnswerRaport.user = optionWrapper[select].innerText;\n            AnswerRaport.numberOfQuestion = numberOfQuestion;\n            AnswerRaport.computer = optionWrapper[computerChoise].innerText;\n            AnswersRaport.push(AnswerRaport);\n\n            computerAnswer.innerText = `${AnswerRaport.computer}`;\n            //computerWrapper.style.opacity = \"1\";\n            if (computerPoint) {\n                computerAnswer.classList.add(\"answer-good\");\n            } else {\n                computerAnswer.classList.add(\"answer-bad\");\n            }\n\n            if (select == rightOption) {\n                score += 1;\n            }\n            else {\n                optionWrapper[select].classList.add(\"answer-bad\");\n            }\n            optionWrapper[rightOption].classList.add(\"answer-good\");\n            optionWrapper[select].classList.add(\"answer-selected\");\n            // We show for one second a selected choise, with good or bad class.\n            await waitForData(1000);\n            optionWrapper[select].classList.remove(\"answer-selected\");\n            optionWrapper[rightOption].classList.remove(\"answer-good\");\n            optionWrapper[select].classList.remove(\"answer-bad\");\n            optionWrapper[computerChoise].classList.remove(\"answer-computer\");\n            computerAnswer.classList.remove(\"answer-bad\");\n            computerAnswer.classList.remove(\"answer-good\");\n            computerAnswer.innerText = \"\";\n            //computerWrapper.style.opacity = \"0\";\n            cleanAnswers(optionWrapper);\n\n            //Give eventlisteners back when new question appear after 1 second\n            optionWrapper[0].addEventListener(\"click\", queston1Listener);\n            optionWrapper[1].addEventListener(\"click\", queston2Listener);\n            optionWrapper[2].addEventListener(\"click\", queston3Listener);\n            optionWrapper[3].addEventListener(\"click\", queston4Listener);\n\n        }\n\n\n\n        let { answer, selected } = selectQuestion(QuestionsPeople, selectedArray);\n\n        if (answer != -1) {\n            await waitForData(50);\n            numberOfQuestion = answer.good;\n            picture.style.backgroundImage = `url(./static/assets/modes/${category}/${answer.good + 1}.png)`;\n            await waitForData(250);\n            let indexOption = randomOption();\n            options[indexOption.good].innerText = QuestionsPeople[answer.good];\n            options[indexOption.bad[0]].innerText = QuestionsPeople[answer.bad[0]];\n            options[indexOption.bad[1]].innerText = QuestionsPeople[answer.bad[1]];\n            options[indexOption.bad[2]].innerText = QuestionsPeople[answer.bad[2]];\n            computerAnswers.good = indexOption.good;\n            computerAnswers.bad = [indexOption.bad[0], indexOption.bad[1], indexOption.bad[2]];\n            rightOption = indexOption.good;\n        }\n        else {\n            questionEnd.style.display = \"flex\";\n            questionImage.style.display = \"none\";\n            questionContent.style.display = \"none\";\n            await waitForData(4000);\n            EndGame(AnswersRaport, score, computerScore, questionsShown);\n            EndTable(AnswersRaport, category);\n            questionEnd.style.display = \"none\";\n            endGame.style.display = \"flex\";\n\n\n            //clear all variables \n            score = 0;\n            computerScore = 0;\n            // QuestionsPeople = [];\n            // fetchData = [];\n            // selectedArray = [];\n            // rightOption = 0;\n            // iterations = 0;\n            // questionsEnd = false;\n            // numberOfQuestion = 0;\n            // questionsShown = 0;\n            AnswersRaport = [];\n            AnswersRaport.length = 0;\n            selectedArray.length = 0;\n            selectedArray = [];\n            optionWrapper[0].removeEventListener(\"click\", queston1Listener, false);\n            optionWrapper[1].removeEventListener(\"click\", queston2Listener, false);\n            optionWrapper[2].removeEventListener(\"click\", queston3Listener, false);\n            optionWrapper[3].removeEventListener(\"click\", queston4Listener, false);\n        }\n    }\n\n    function queston1Listener() {\n        showQuestion(0);\n    }\n    function queston2Listener() {\n        showQuestion(1);\n    }\n    function queston3Listener() {\n        showQuestion(2);\n    }\n    function queston4Listener() {\n        showQuestion(3);\n    }\n\n    const timeToEnd = setInterval(() => {\n        if (timeLeft <= 0) {\n            EndGame(AnswersRaport, score, computerScore, questionsShown);\n            EndTable(AnswersRaport, category, AnswersRaport);\n            questionsEnd = true;\n            questionWrapper.style.display = \"none\";\n            endGame.style.display = \"flex\";\n            localStorage.setItem('mostRecentScore', score);\n            localStorage.setItem('QuestionsTotal', questionsShown);\n            document.getElementById(\"hall-of-fame-save\").reset();\n            clearInterval(timeToEnd);\n\n            //clear all variables \n            score = 0;\n            computerScore = 0;\n            // QuestionsPeople = [];\n            // fetchData = [];\n            // selectedArray = [];\n            // rightOption = 0;\n            // iterations = 0;\n            // questionsEnd = false;\n            // numberOfQuestion = 0;\n            // questionsShown = 0;\n            AnswersRaport = [];\n            AnswersRaport.length = 0;\n            selectedArray.length = 0;\n            selectedArray = [];\n            optionWrapper[0].removeEventListener(\"click\", queston1Listener, false);\n            optionWrapper[1].removeEventListener(\"click\", queston2Listener, false);\n            optionWrapper[2].removeEventListener(\"click\", queston3Listener, false);\n            optionWrapper[3].removeEventListener(\"click\", queston4Listener, false);\n        }\n        else {\n            questionsEnd = false;\n        }\n    }, 1000)\n\n}\n\n// ============== Functions definitions ================ /\n\n\nfunction getDataLocaly(APIurl, category) {\n    let temparray = [];\n    transferData(require(setCategory(category, APIurl, true)), temparray, \"fields\", \"name\");\n}\n\n//Function with give possibility to wait some time to get properly data.\n//@time - miliseconds\nfunction waitForData(time) {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve('resolved');\n        }, time);\n    });\n}\n\n// async function to get single package data from API and put it to fetchData array.\nasync function getData(url, fetchData, QuestionsPeople) {\n    let responseOk;\n    let responseStatus;\n    let fetchedData;\n    let waitingTine = 0;\n    let waitForFetchEnd;\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    waitForFetchEnd = setTimeout(() => {\n        // Abort.\n        controller.abort();\n        responseStatus = -1;\n    }, 5000)\n\n    await fetch(url, {\n        method: 'get',\n        signal: signal\n    })\n        .then(async response => {\n            if (response.ok) {\n                let data = response.json();\n                fetchedData = data;\n                responseOk = true;\n                responseStatus = response.status;\n                return data;\n\n            }\n        })\n        .then(data => {\n            fetchedData = data;\n            for (const element of data.results) {\n                fetchData.push(element);\n            }\n        })\n        .catch(() => {\n            alert(\"Ups... something wrong with Rest API\");\n            if (responseStatus != 200) {\n                responseOk = false;\n            }\n        });\n\n    // Get from data objects only names and put it to one array.\n    if (responseOk) {\n        transferData(fetchData, QuestionsPeople, \"name\");\n        return {\n            responseOk: responseOk,\n            responseStatus: responseStatus,\n            StarWarsDataCount: fetchedData.count,\n            StarWarsDataLength: fetchedData.results.length\n        }\n    }\n    else {\n        return {\n            responseOk: false,\n            responseStatus: responseStatus,\n            StarWarsDataCount: 0,\n            StarWarsDataLength: 0\n        }\n    }\n}\n\n\n// Function to get rest of data from API - changing the url pages.\nasync function getAllData(APIurl, responseOk, iterations, category, fetchData, QuestionsPeople) {\n    let nextUrl;\n    if (responseOk) {\n        for (let m = 1; m < iterations; m++) {\n            nextUrl = `https://swapi.dev/api/${category}/?page=` + (m + 1);\n            getData(nextUrl, fetchData, QuestionsPeople);\n            await waitForData(800);\n        }\n    }\n    else {\n        let data;\n        switch (category) {\n            case \"people\":\n                data = require(`../../swapi-json-server/people.json`);\n                transferData(data, QuestionsPeople, \"fields\", \"name\");\n                break;\n            case \"starships\":\n                data = require(`../../swapi-json-server/starships.json`);\n                transferData(data, QuestionsPeople, \"fields\", \"starship_class\");\n                break;\n            case \"vehicles\":\n                data = require(`../../swapi-json-server/vehicles.json`);\n                transferData(data, QuestionsPeople, \"fields\", \"vehicle_class\");\n                break;\n            default:\n                data = require(`../../swapi-json-server/people.json`);\n                transferData(data, QuestionsPeople, \"fields\", \"name\");\n                break;\n        }\n\n    }\n\n}\n\n// Function to choose category and return new URL to API request\n// if uselocal = TRUE, we use local API instead of Rest API.\nfunction setCategory(category = \"people\", APIurl = \"\", useLocal = false) {\n    let newAPIurl;\n    if (!useLocal) {\n        switch (category) {\n            case \"people\":\n                newAPIurl = APIurl + \"/people/\";\n                break;\n            case \"starships\":\n                newAPIurl = APIurl + \"/starships/\";\n                break;\n            case \"vehicles\":\n                newAPIurl = APIurl + \"/vehicles/\";\n                break;\n            default:\n                newAPIurl = APIurl + \"/people/\";\n                break;\n        }\n    }\n    else {\n        if (category == \"people\" || category == \"vehicles\" || category == \"starships\") {\n            newAPIurl = `../../swapi-json-server/${category}.json`;\n        }\n        else {\n            newAPIurl = `../../swapi-json-server/people.JSON`;\n        }\n    }\n    return newAPIurl;\n}\n\n// transfer data from input object to output array @area is a string with object atribute\nfunction transferData(input = [], output = [], prefix1 = \"\", prefix2 = \"\") {\n    let transferArea1 = prefix1;\n    let transferArea2 = prefix2;\n    for (let i = 0; i < input.length; i++) {\n        prefix1.length > 0 ? (prefix2.length > 0 ? output[i] = input[i][transferArea1][transferArea2] : output[i] = input[i][transferArea1]) : output[i] = input[i];\n    }\n    return output;\n}\n\n// Function created to select unique questions\n// @questions - array with data from API , @selected - array with already shown questions\nfunction selectQuestion(questions, selectedArray = []) {\n    // defeinitions of some used variables\n    let dubbled = false;\n    let selectedQuestion;\n    let selectedChoises = [];\n    let optionsSelected = false;\n    let max = questions.length - 1;\n    let min = 0;\n    // this is done only if we have questions to show. If we show all of questions function returns -1;\n    if ((questions.length > selectedArray.length) && (questions.length > 0)) {\n        do {\n            // get random value from min to max\n            const randomQuestion = Math.floor(Math.random() * (max - min + 1) + min);\n            dubbled = false;\n            // If we get value that already exist, we have to draw again\n            for (let number of selectedArray) {\n                if (number == randomQuestion) {\n                    dubbled = true;\n                }\n            }\n            // If we have new value - put it to selected array and get the question number\n            if (!dubbled) {\n                selectedArray.push(randomQuestion);\n                selectedQuestion = randomQuestion;\n            }\n        }\n        while (dubbled)\n        // Now we should draw other answers - for now, its also random questions from other elements of category\n        do {\n            optionsSelected = false;\n            const randomChoise1 = Math.floor(Math.random() * (max - min + 1) + min);\n            const randomChoise2 = Math.floor(Math.random() * (max - min + 1) + min);\n            const randomChoise3 = Math.floor(Math.random() * (max - min + 1) + min);\n            if (selectedQuestion != randomChoise1 && selectedQuestion != randomChoise2 && selectedQuestion != randomChoise3\n                && randomChoise1 != selectedQuestion && randomChoise1 != randomChoise2 && randomChoise1 != randomChoise3\n                && randomChoise2 != selectedQuestion && randomChoise2 != randomChoise1 && randomChoise2 != randomChoise3\n                && randomChoise3 != selectedQuestion && randomChoise3 != randomChoise1 && randomChoise3 != randomChoise2) {\n                optionsSelected = true;\n                selectedChoises.push(randomChoise1);\n                selectedChoises.push(randomChoise2);\n                selectedChoises.push(randomChoise3);\n            }\n        }\n        while (!optionsSelected)\n        // At the output we return object with good answer and 3 bad answers\n        let obj = {\n            answer: {\n                good: selectedQuestion,\n                bad: [selectedChoises[0], selectedChoises[1], selectedChoises[2]]\n            },\n            selected: selectedArray,\n            questions: questions\n        }\n        return obj;\n    }\n    else {\n        let obj = {\n            answer: -1,\n            selected: selectedArray,\n            questions: questions\n        }\n        return obj;\n    }\n\n}\n\n\n// Function to put good answer in random option (1 of 4 element)\nfunction randomOption() {\n    let max = 3;\n    let min = 0;\n    const rest = [0, 1, 2, 3];\n    const randomGood = Math.floor(Math.random() * (max - min + 1) + min);\n    let index = rest.indexOf(randomGood);\n    rest.splice(index, 1);\n    let obj = {\n        good: randomGood,\n        bad: rest\n    }\n    return obj;\n}\n\nfunction computerPlay(computerAnswers) {\n    let max = computerAnswers.good;\n    let min = 0;\n    let good = computerAnswers.good;\n    let bad = computerAnswers.bad;\n    const computerChoise = Math.floor(Math.random() * (max - min + 1) + min);\n    let computerPoint;\n    (computerChoise == computerAnswers.good) ? computerPoint = 1 : computerPoint = 0;\n    return { computerChoise, computerPoint };\n    //return 0;\n}\n\nfunction cleanAnswers(optionWrapper) {\n    for (let i = 0; i < optionWrapper.length; i++) {\n        optionWrapper[i].classList.remove(\"answer-selected\");\n        optionWrapper[i].classList.remove(\"answer-good\");\n        optionWrapper[i].classList.remove(\"answer-bad\");\n        optionWrapper[i].classList.remove(\"answer-computer\");\n    }\n\n}\n\nmodule.exports = { Questions, randomOption, selectQuestion };\n\n\n\n","import { category } from './MainMenu';\n\n\nconst textToView = {\n  'people': {\n    'title': 'Who is this character?',\n    'Rules': 'You have one minute (1m) to answer as many questions as' +\n      ' possible. During the game you need to choose from available' +\n      ' options which Star Wars character is shown in the picture' +\n      ' on the left.',\n    'Src':'<img src=\"./static/assets/modes/people/35.png\" alt=\"random character\" class=\"img-rules\">'\n  },\n  'vehicles': {\n    'title': 'Do you recognize this vehicle?',\n    'Rules':  'You have one minute (1m) to answer as many questions as possible.' +\n      ' During the game you need to choose from available options which Star Wars' +\n      ' vehicle is shown in the picture on the left.',\n    'Src':'<img src=\"./static/assets/modes/vehicles/4.png\" alt=\"random character\" class=\"img-rules\">'\n  },\n  'starships': {\n    'title': 'Do you recognize this starship?',\n    'Rules': 'You have one minute (1m) to answer as many questions as possible.' +\n      ' During the game you need to choose from available options which Star Wars' +\n      ' starship is shown in the picture on the left.',\n    'Src':  '<img src=\"./static/assets/modes/starships/13.png\" alt=\"random character\" class=\"img-rules\">'\n  },\n};\n\nconst listItems = document.querySelectorAll('.main-menu--option');\nlistItems.forEach(item => {\n  if (item.classList.contains('main-menu--selected')) {\n    updateText(item.id);\n  }\n});\n\nexport function handleRulesButtonClick(e) {\n\n  let listItems = document.querySelectorAll('.main-menu--option');\n  if (e.target.textContent === 'Rules') {\n    e.target.textContent = 'Hall of fame';\n  } else if (e.target.textContent === 'Hall of fame') {\n    e.target.textContent = 'Rules';\n  }\n  listItems.forEach(item => {\n    if (item.classList.contains('main-menu--selected')) {\n      updateText(item.id);\n\n    }\n  });\n}\n\nexport function updateText(category) {\n  const modeTitle = document.querySelector('.rules-head');//'.swquiz-mode-title'\n  const modeContent = document.querySelector('.rules');//'.swquiz-mode-content'\n  const rulesRankingButton = document.querySelector('.hall-of-fame');//'.sw-quiz-mode-button-rules'\n  const headImage = document.querySelector('.head-img-rules');\n  let ranking = []\n  switch (category) {\n    case \"people\":\n      ranking = JSON.parse(localStorage.getItem(`highScoresPeople`)) || [];\n      break;\n    case \"vehicles\":\n      ranking = JSON.parse(localStorage.getItem(`highScoresVehicle`)) || [];\n      break;\n    case \"starships\":\n      ranking = JSON.parse(localStorage.getItem(`highScoresStarship`)) || [];\n  }\n\n\n  headImage.innerHTML =  textToView[category].Src;\n  modeTitle.textContent = textToView[category].title;\n  modeContent.innerHTML = rulesRankingButton.textContent === 'Hall of fame' ?\n    '<div><h2>Mode rules:</h2><p class=\"rule-on-change\">' + textToView[category].Rules + '</p></div>' :\n    ranking.length ?\n      '<div><h2>Mode ranking:</h2><table><tr><th>Place</th><th>Player</th><th>Answered</th><th>Percents</th></tr>' +\n      ranking.filter((e, i) => i < 5).map((person, id) => {\n        const i = id + 1;\n\n        return '<tr><td>' + i + '</td><td><div style=\"overflow:hidden\">' + person.name + '</div></td> <td>' + person.score + '/' + person.max_score +\n          '</td><td>'+person.scorePercents.toFixed(2)+'%'+'</td></tr>';\n      }).join(' ') + '</table><div class=\"all-ranking-btn-flex\"><button class=\"btn\" id=\"all-ranking-btn\">See all</button></div></div>' :\n      '<div><h2>Mode ranking:</h2><p>The leadership is empty</p></div>';\n\n  if (rulesRankingButton.textContent !== 'Hall of fame' && ranking.length) {\n    handleAllRankingButton(ranking)\n  }\n}\nconst modal = document.getElementById('Hall-of-fame-modal');\nlet span = document.getElementsByClassName('close')[0];\nspan.addEventListener('click', () => modal.style.display = 'none');\n\nwindow.addEventListener('click',\n  (e) => {\n    if (e.target === modal) {\n      modal.style.display = 'none';\n    }\n  });\n\nfunction handleAllRankingButton(rankingArray) {\n  let seeAllButton = document.getElementById('all-ranking-btn');\n  seeAllButton.addEventListener('click', () => {\n    modalRankingView(rankingArray)\n  });\n}\n\n\nfunction modalRankingView(rankingArray){\n  let rankingModalBody = document.querySelector('.modal-body');\n  rankingModalBody.innerHTML = '<div><table><tr><th>Place</th><th>Player</th><th>Answered</th><th>Percents</th></tr>' +\n    rankingArray.map((person, id) => {\n      const i = id + 1;\n      return '<tr><td>' + i + '</td><td><div style=\"overflow:hidden\">' + person.name + '</div></td> <td>' + person.score + '/' + person.max_score +\n        '</td><td>'+person.scorePercents.toFixed(2)+'%'+'</td></tr>';\n    }).join(' ') + '</table></div>';\n  modal.style.display = 'block';\n}\n\nconst username = document.getElementById(\"player-name-hall-of-fame\");\n\nexport function saveHighScore (e) {\n  e.preventDefault();\n  if((!username.value)) {username.value = 'noname'};\n\n    const lastScore = {\n        score: localStorage.getItem('mostRecentScore'),\n        max_score: localStorage.getItem('QuestionsTotal'),\n        scorePercents : (localStorage.getItem('mostRecentScore') / localStorage.getItem('QuestionsTotal')) * 100,\n        name: username.value,\n    };\n\n    switch(category) {\n      case \"people\":\n        setRankingToLocalStorage(\"highScoresPeople\", lastScore)\n        break;\n      case \"vehicles\":\n        setRankingToLocalStorage(\"highScoresVehicle\", lastScore)\n        break;\n      case \"starships\":\n        setRankingToLocalStorage(\"highScoresStarship\", lastScore)\n    }\n}\n\nfunction setRankingToLocalStorage(fileName, lastScore) {\n  const highScores = JSON.parse(localStorage.getItem(fileName)) || [];\n  if (localStorage.getItem(fileName)) {\n    const matched = highScores.filter(user => {\n      return username.value === user.name;\n    });\n    if (matched.length > 0) {\n      if (matched[0].scorePercents < lastScore.scorePercents) {\n        matched[0].score = localStorage.getItem('mostRecentScore');\n        matched[0].max_score = localStorage.getItem('QuestionsTotal');\n        matched[0].scorePercents = (localStorage.getItem('mostRecentScore') / (localStorage.getItem('QuestionsTotal'))) * 100;\n\n        const index = highScores.findIndex(user => user.name == username.value);\n        highScores.splice(index, 1);\n        highScores.push(matched[0]);\n      }\n    } else {\n      highScores.push(lastScore);\n    }\n  } else {\n    highScores.push(lastScore);\n  }\n  highScores.sort((a, b) => {\n    return b.scorePercents - a.scorePercents;\n  });\n  let endSection = document.querySelector(\".end-game\")\n  let rulesSection = document.querySelector(\"#rules__wrapper\")\n  localStorage.setItem(fileName, JSON.stringify(highScores));\n  endSection.style.display = \"none\";\n  rulesSection.style.display = \"inline\";\n  modalRankingView(highScores)\n}\n\n\n\n\n\n\n\n","import {updateText} from './HallOfFameAndMode'\nimport {acceptingMode} from './App'\n\nconst listItems = document.querySelectorAll('.main-menu--option');\nexport let category = \"people\";\nlistItems.forEach(item => item.addEventListener('click', handleModeUpdate));\n\nexport function handleModeUpdate(e){\n    if(!acceptingMode) return;\n    if(!e.target.classList.contains('main-menu--selected')) {\n        for (var i = 0; i < listItems.length; i++) {\n            listItems[i].classList.remove('main-menu--selected');\n        }\n        e.target.classList.add('main-menu--selected');\n        category = e.target.innerText.toLowerCase();\n    }\n    updateText(category)\n}\n","import { Questions} from \"./Questions\";\nimport {handleModeUpdate, category} from \"./MainMenu\";\nimport {handleRulesButtonClick, saveHighScore} from \"./HallOfFameAndMode\";\nexport let acceptingMode = true;\nexport const App = ({options}) => {\n  const start = document.getElementsByClassName('play-the-game')[0];\n  const rules = document.getElementById(\"rules__wrapper\");\n\n\n \n  start.addEventListener(\"click\", () => {\n    Questions(options.swApiBaseUrl,`${category}`);\n    rules.style.display=\"none\";\n    acceptingMode = false;\n   \n  })\n\n  const rulesRankingButton = document.querySelector('.hall-of-fame');\n  rulesRankingButton.addEventListener('click', handleRulesButtonClick);\n\n  const saveScoreBtn = document.getElementById(\"save-hall-of-fame-button\");\n  saveScoreBtn.addEventListener('click',e =>{ saveHighScore(e); acceptingMode = true;});\n \n\n}\n\n","import '../node_modules/regenerator-runtime/runtime' //async/await with Parcel\nimport {App} from \"./app/App\";\nimport {ProgressBar} from \"./app/ProgressBar\";\n\nconst ONE_SECOND_MILLIS = 1000;\nconst SW_API_BASE_URL = process.env.SW_API_BASE_URL || \"https://swapi.dev/api\";\nconst QUIZ_MAX_TIME = process.env.QUIZ_MAX_TIME_SECONDS ? process.env.QUIZ_MAX_TIME_SECONDS * ONE_SECOND_MILLIS : 120 * ONE_SECOND_MILLIS;\n\nwindow.onload = () => App({options: {swApiBaseUrl: SW_API_BASE_URL, quizMaxTime: QUIZ_MAX_TIME}})\n//window.addEventListener('click', ProgressBar, {once: true});\n"]}